#use-added-syntax(esir)
defpackage ocdb/analog-devices/ADM7154:
  import core
  import collections
  import math
  import esir
  import esir/utils
  import esir/gen
  import ocdb/tests/default-harness
  import ocdb/pinspec
  import ocdb/land-patterns

  import ocdb/generator-utils
  import ocdb/generic-components

;[strip]
  import ocdb/symbols
  import ocdb/box-symbol
;[/strip]

public pcb-component component (v-out:Double) :
  name = "ADM7154"
  description = "600 mA, Ultralow Noise, High PSRR, RF Linear Regulator"
  manufacturer = "Analog Devices"
  val a-code = switch(v-out) :
    1.2 : "1.2"
    1.8 : "1.8"
    2.5 : "2.5"
    2.8 : "2.8"
    3.0 : "3.0"
    3.3 : "3.3"
    else : fatal("Incorrect current rating for ADM7154 %_" % [v-out])
  mpn = to-string("ADM7154ARDZ-%_-R7" % [a-code])
  val ps = PinSpec $ #TABLE :
    [Ref | Int ...   | Dir  ]
    [vin    | 8 | Left]
    [en     | 7 | Left]
    [vreg   | 1 | Left]
    [byp    | 3 | Left]
    [vout   | 2 | Right]
    [ref    | 6 | Right]
    [ref-sense | 5 | Right]
    [gnd | 4 9 | Down]
  gen-symbol-map(ps, soic127p-package(8, [2.3 2.3]))
  properties(vin):
    power-pin => true
    rated-voltage => [2.3 5.5]
  properties(vout):
    supply-pin => true
    voltage => v-out
 
public pcb-module module (v-out) :
  pin vin
  pin vout
  pin gnd
  pin en
  inst ps : {ocdb/analog-devices/ADM7154/component(v-out)}
  cap-strap(ps.vin, gnd, 10.0e-6)
  cap-strap(ps.vout, gnd, 10.0e-6)
  cap-strap(ps.vreg, gnd, 10.0e-6)
  cap-strap(ps.byp, gnd, 1.0e-6)
  cap-strap(ps.byp, gnd, 100.0e-6)
  net (ps.ref, ps.ref-sense)
  cap-strap(ps.ref, gnd, 1.0e-6)
  net (ps.en, en)
  net (ps.vin, vin)
  net (ps.vout, vout)
  net (ps.gnd gnd)