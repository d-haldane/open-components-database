#use-added-syntax(esir)
defpackage ocdb/calculate-connected :
  import core
  import collections
  import esir
  import esir/gen
  import esir/utils

val NET-TABLE = HashTable<Ref,Int>()
var CALCULATE-CONNECTED:True|False = false

public defn calculate-connected () :
  inside pcb-module :
    for (n in nets(self), i in 0 to false) do :
      ; println("Register %_ as connected" % [refs(n)])
      if length(refs(n)) > 1 :
        for r in refs(n) do :
          NET-TABLE[r] = i
    CALCULATE-CONNECTED = true

public defn connected-table-calculated? () :
  CALCULATE-CONNECTED

public defn connected? (input-r:Ref) :
  val r = top-level-ref(input-r)
  key?(NET-TABLE, r)

public defn connected? (input-a:Ref, input-b:Ref) :
  val a = top-level-ref(input-a)
  val b = top-level-ref(input-b)
  val neta = get?(NET-TABLE, a)
  val netb = get?(NET-TABLE, b)
  val result = 
    match(neta:Int, netb:Int) :
      neta == netb
  ; println("Connected?(%_ (%_), %_ (%_)) = %_" % [input-a, a, input-b, b, result])
  result